#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

int robotSum(vector<int>& garbage, int m) {
    int n = garbage.size();
    if (n == 0) return 0;

    vector<vector<int>> dp(n + 1, vector<int>(2, INT_MAX));
    dp[0][0] = 0;
    dp[0][1] = 0;

    for (int i = 1; i <= n; ++i) {
        dp[i][0] = min(dp[i-1][0], dp[i-1][1]) + garbage[i-1];

        int deploy_cost = dp[i-1][0] + m;
        int cleaned = (i < n) ? garbage[i] : 0;
        dp[i][1] = deploy_cost - cleaned;
    }

    return min(dp[n][0], dp[n][1]);
}

void testRobotSum() {
    {
        vector<int> garbage = {1, 2, 3};
        int m = 5;
        int expected = 6;
        int result = robotSum(garbage, m);
        cout << "Test case 1: ";
        if (result == expected) {
            cout << "Passed! (Expected: " << expected << ", Got: " << result << ")\n";
        } else {
            cout << "Failed! (Expected: " << expected << ", Got: " << result << ")\n";
        }
    }

    {
        vector<int> garbage = {1, 1, 1};
        int m = 2;
        int expected = 3;
        int result = robotSum(garbage, m);
        cout << "Test case 2: ";
        if (result == expected) {
            cout << "Passed! (Expected: " << expected << ", Got: " << result << ")\n";
        } else {
            cout << "Failed! (Expected: " << expected << ", Got: " << result << ")\n";
        }
    }

    {
        vector<int> garbage = {5};
        int m = 3;
        int expected = 3;
        int result = robotSum(garbage, m);
        cout << "Test case 3: ";
        if (result == expected) {
            cout << "Passed! (Expected: " << expected << ", Got: " << result << ")\n";
        } else {
            cout << "Failed! (Expected: " << expected << ", Got: " << result << ")\n";
        }
    }

    {
        vector<int> garbage = {2, 3, 1, 4, 2, 5};
        int m = 4;
        int expected = 12;
        int result = robotSum(garbage, m);
        cout << "Test case 4: ";
        if (result == expected) {
            cout << "Passed! (Expected: " << expected << ", Got: " << result << ")\n";
        } else {
            cout << "Failed! (Expected: " << expected << ", Got: " << result << ")\n";
        }
    }

    {
        vector<int> garbage = {};
        int m = 5;
        int expected = 0;
        int result = robotSum(garbage, m);
        cout << "Test case 5: ";
        if (result == expected) {
            cout << "Passed! (Expected: " << expected << ", Got: " << result << ")\n";
        } else {
            cout << "Failed! (Expected: " << expected << ", Got: " << result << ")\n";
        }
    }
}

int main() {
    testRobotSum();
    return 0;
}
